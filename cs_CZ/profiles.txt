menu.profiles = Device Profiles
module.profiles = Device Profiles
profiles = Profiles
profiles_advanced = Advanced
profiles_advanced_add = Add
profiles_advanced_parameter = Parameter
profiles_advanced_value = Value
profiles_confirm_delete = Are you sure you wish to delete this profile?
profiles_default_delete = Default profiles cannot be deleted.
profiles_delete = Delete
profiles_description = Description
profiles_description_tooltip = Description for this profile.
profiles_general = General
profiles_general_section = General
profiles_iax_description = Description
profiles_iax_description_tooltip = Description for this profile.
profiles_iax_general_section = General
profiles_iax_host = Host
profiles_iax_host_invalid = No host specified.
profiles_iax_host_tooltip = Hostname or address of device.
profiles_iax_name = Name
profiles_iax_name_duplicate = Duplicate profile name.
profiles_iax_name_invalid = No profile name specified.
profiles_iax_name_tooltip = Name for this profile.
profiles_iax_network_section = Network
profiles_iax_peertype = Type
profiles_iax_peertype_friend = Friend
profiles_iax_peertype_invalid = Invalid value for Network Type
profiles_iax_peertype_peer = Peer
profiles_iax_peertype_tooltip = Defines the device type. "User" is a device that places calls, requires authentication. "Peer" is a trunk device, matched by host. "Friend" is a combination of the "User" and "Peer".
profiles_iax_peertype_user = User
profiles_iax_qualifyfreq = Qualify Frequency
profiles_iax_qualifyfreq_invalid = Qualify frequency must be a number starting from 0.
profiles_iax_qualifyfreq_tooltip = Define the qualify interval in seconds. A value of zero will disable this feature.
profiles_iax_qualify = Qualify Timeout
profiles_iax_qualify_invalid = Qualify must be a number starting from 0.
profiles_iax_qualify_tooltip = Define the maximum response time in milliseconds before a device is considered unreachable. A value of zero will disable this feature.
profiles_iax_requirecalltoken = Call Token
profiles_iax_requirecalltoken_auto = Automatic
profiles_iax_requirecalltoken_invalid = Call Token must be one of: Yes, No, Automatic.
profiles_iax_requirecalltoken_no = No
profiles_iax_requirecalltoken_tooltip = Use a requirecalltoken for authentication.
profiles_iax_requirecalltoken_yes = Yes
profiles_iax_transfer = Transfer
profiles_iax_transfer_invalid = Transfer must be one of: Yes, No, Media Only.
profiles_iax_transfer_media = Media Only
profiles_iax_transfer_no = No
profiles_iax_transfer_tooltip = Allow transfers from this device.
profiles_iax_transfer_yes = Yes
profiles_iax_transfer_ =
profiles_name = Name
profiles_name_duplicate = Duplicate profile name.
profiles_name_invalid = No profile name specified.
profiles_name_tooltip = Name for this profile.
profiles_profile_deleted = The profile has been successfully deleted.
profiles_sip_avpf = AVPF
profiles_sip_avpf_tooltip = Enables inter-operatibility with media streams using the AVPF RTP profile.
profiles_sip_callerid = Caller ID
profiles_sip_callerid_section = Caller ID
profiles_sip_description = Description
profiles_sip_description_tooltip = Description for this profile.
profiles_sip_directmedia = Direct Media
profiles_sip_directmedia_invalid = Direct RTP must be one of: Yes, No, Yes if no nat, Use UPDATE.
profiles_sip_directmedia_nonat = Yes, if no nat
profiles_sip_directmedia_no = No
profiles_sip_directmedia_tooltip = Enables direct sending of RTP between call participants.
profiles_sip_directmedia_update = Use UPDATE
profiles_sip_directmedia_yes = Yes
profiles_sip_encryption = RTP Encryption
profiles_sip_encryption_tooltip = Enables sRTP voice encryption.
profiles_sip_general_section = General
profiles_sip_host = Host
profiles_sip_host_invalid = No host specified.
profiles_sip_host_tooltip = Hostname or address of device.
profiles_sip_icesupport = ICE
profiles_sip_icesupport_tooltip = Use ICE protocol for bridging firewalls.
profiles_sip_name = Name
profiles_sip_name_duplicate = Duplicate profile name.
profiles_sip_name_invalid = No profile name specified.
profiles_sip_name_tooltip = Name for this profile.
profiles_sip_network_section = Network
profiles_sip_peertype = Type
profiles_sip_peertype_friend = Friend
profiles_sip_peertype_invalid = Invalid value for Network Type
profiles_sip_peertype_peer = Peer
profiles_sip_peertype_tooltip = Defines the device type. "User" is a device that places calls, requires authentication. "Peer" is a trunk device, matched by host. "Friend" is a combination of the "User" and "Peer".
profiles_sip_peertype_user = User
profiles_sip_qualifyfreq = Qualify Frequency
profiles_sip_qualifyfreq_invalid = Qualify frequency must be a number starting from 0.
profiles_sip_qualifyfreq_tooltip = Define the qualify interval in seconds. A value of zero will disable this feature.
profiles_sip_qualify = Qualify Timeout
profiles_sip_qualify_invalid = Qualify must be a number starting from 0.
profiles_sip_qualify_tooltip = Define the maximum response time in milliseconds before a device is considered unreachable. A value of zero will disable this feature.
profiles_sip_sendrpid = Send Remote Party ID
profiles_sip_sendrpid_invalid = Send Remote Party ID must be one of: Yes, No, Use RPID, Use PAI.
profiles_sip_sendrpid_no = No
profiles_sip_sendrpid_pai = Use PAI (Privacy Asserted Identity)
profiles_sip_sendrpid_rpid = Use RPID (Remote Party ID)
profiles_sip_sendrpid_tooltip = Add remote party ID header to SIP INVITEs.
profiles_sip_sendrpid_yes = Yes
profiles_sip_transport = Transport
profiles_sip_transport_tooltip = Set the default transports.  The order determines the primary default transport.
profiles_sip_transport_invalid = Transport must be one of: TCP, UDP, TLS, WS and/or WSS.
profiles_sip_transport_tcp = TCP
profiles_sip_transport_tls = TLS
profiles_sip_transport_udp = UDP
profiles_sip_transport_wss = WSS
profiles_sip_transport_ws = WS
profiles_sip_trustrpid = Trust Remote Party ID
profiles_sip_trustrpid_tooltip = Assume that the remote party ID header is correct.
profiles_technology = Profile Type
profiles_technology_duplicate_name = Profile name must be unique.
profiles_technology_iax = IAX2
profiles_technology_invalid = Invalid technology type selected.
profiles_technology_sip = SIP
profiles_technology_tooltip = Technology type for this profile.
profiles_technology_pjsip = PJSIP
profiles_pjsip_general_section = General
profiles_pjsip_name = Name
profiles_pjsip_name_tooltip = Name for this profile.
profiles_pjsip_description = Description
profiles_pjsip_description_tooltip = Description for this profile.
profiles_pjsip_transport = Transport
profiles_pjsip_transport_tooltip =
	This will force the endpoint to use the specified transport configuration to send SIP messages. You need to already
	know what kind of transport (UDP/TCP/TLS/etc) the endpoint device will use. If set to "Auto", then, the default
	transport chosen is the first compatible transport in the configuration file for the contact URL.
profiles_pjsip_dtls_cert_file = DTLS Certfile
profiles_pjsip_dtls_cert_file_tooltip = Path to certificate file to present to peer
profiles_pjsip_dtls_private_key = DTLS Private Key
profiles_pjsip_dtls_private_key_tooltip = Path to private key for certificate file.
profiles_pjsip_media_encryption = Media Encryption
profiles_pjsip_media_encryption_tooltip = Determines whether res_pjsip will use and enforce usage of media encryption for this endpoint.
profiles_pjsip_dtls_setup = DTLS Setup
profiles_pjsip_dtls_setup_tooltip =
	Whether we are willing to accept connections, connect to the other party, or both.
	Valid options are:  <br>
	<b>Active</b> (we want to connect to the other party), <br>
	<b>Passive</b> (we want to accept connections only), <br>
	<b>Actpass</b> (we will do both). <br>
	This value will be used in the outgoing SDP when offering and for incoming SDP offers when the remote party sends actpass
profiles_pjsip_force_rport = Force rport
profiles_pjsip_force_rport_tooltip = Force RFC3581 compliant behavior even when no rport parameter exists. Basically always send SIP responses back to the same port we received SIP requests from.
profiles_pjsip_ice_support = ICE Support
profiles_pjsip_ice_support_tooltip = Enable the ICE mechanism to help traverse NAT
profiles_pjsip_rtp_symmetric = RTP Symmetric
profiles_pjsip_rtp_symmetric_tooltip = Enforce that RTP must be symmetric. Send RTP back to the same address/port we received it from.
profiles_pjsip_rewrite_contact = Rewrite Contact
profiles_pjsip_rewrite_contact_tooltip = Allow Contact header to be rewritten with the source IP address-port. necessary if endpoint does not know/register public ip:port
profiles_pjsip_direct_media = Direct Media
profiles_pjsip_direct_media_tooltip = Determines whether media may flow directly between endpoints.
profiles_pjsip_disable_direct_media_on_nat = Disable NAT Direct Media
profiles_pjsip_disable_direct_media_on_nat_tooltip = Disable direct media session refreshes when NAT obstructs the media session
profiles_pjsip_dtls_verify = DTLS Verify
profiles_pjsip_dtls_verify_tooltip = Verify that the provided peer certificate is valid
profiles_pjsip_use_avpf = Use AVPF
profiles_pjsip_use_avpf_tooltip = Determines whether res_pjsip will use and enforce usage of AVPF for this endpoint.
profiles_pjsip_rtcp_mux = RTCP Mux
profiles_pjsip_rtcp_mux_tooltip =
	With this option enabled, Asterisk will attempt to negotiate the use of the "rtcp-mux" attribute on all media streams.
	This will result in RTP and RTCP being sent and received on the same port. This shifts the demultiplexing logic to
	the application rather than the transport layer. This option is useful when interoperating with WebRTC endpoints
	since they mandate this option's use.
profiles_pjsip_media_use_received_transport = Media Transport Received
profiles_pjsip_media_use_received_transport_tooltip = Determines whether res_pjsip will use the media transport received in the offer SDP in the corresponding answer SDP.
profiles_pjsip_media_encryption_optimistic = Media Encryption Optimistic
profiles_pjsip_media_encryption_optimistic_tooltip = Determines whether encryption should be used if possible but does not terminate the session if not achieved.
profiles_pjsip_asymmetric_rtp_codec = Asymmetric RTP Codec
profiles_pjsip_asymmetric_rtp_codec_tooltip = Allow the sending and receiving RTP codec to differ
profiles_pjsip_media_encryption_no = No
profiles_pjsip_media_encryption_sdes = SDES
profiles_pjsip_media_encryption_dtls = DTLS
profiles_pjsip_dtls_setup_active = Active
profiles_pjsip_dtls_setup_passive = Passive
profiles_pjsip_dtls_setup_actpass = Actpass
profiles_pjsip_network_section = Network
profiles_pjsip_media_section = Media
profiles_pjsip_dtls_section = DTLS
profiles_pjsip_name_invalid = No profile name specified.
profiles_pjsip_none = -- None --
profiles_pjsip_dtls_cert_id = DTLS Certificate
profiles_pjsip_dtls_cert_id_tooltip = Certificate to use with DTLS connections
profiles_pjsip_dtls_verify_yes = Yes
profiles_pjsip_dtls_verify_no = No
profiles_pjsip_dtls_verify_fingerprint = Fingerprint
profiles_pjsip_dtls_verify_certificate = Certificate
profiles_pjsip_dtls_fingerprint = DTLS Fingerprint Hash
profiles_pjsip_dtls_fingerprint_tooltip = The hash to use for the fingerprint in SDP
profiles_pjsip_dtls_fingerprint_sha-256 = SHA-256
profiles_pjsip_dtls_fingerprint_sha-1 = SHA-1
profiles_pjsip_dtls_rekey = DTLS Rekey Interval
profiles_pjsip_dtls_rekey_tooltip =
	Interval at which to renegotiate the TLS session and rekey the SRTP session. If this is not set or the value
	provided is 0 rekeying will be disabled
profiles_sip_none = {profiles_pjsip_none}
profiles_sip_dtls_section = {profiles_pjsip_dtls_section}
profiles_sip_dtlsenable = Enable
profiles_sip_dtlsenable_tooltip = Enable or disable DTLS-SRTP support
profiles_sip_dtls_cert_id = {profiles_pjsip_dtls_cert_id}
profiles_sip_dtls_cert_id_tooltip = {profiles_pjsip_dtls_cert_id_tooltip}
profiles_sip_dtlssetup = {profiles_pjsip_dtls_setup}
profiles_sip_dtlssetup_tooltip = {profiles_pjsip_dtls_setup_tooltip}
profiles_sip_dtlssetup_active = {profiles_pjsip_dtls_setup_active}
profiles_sip_dtlssetup_passive = {profiles_pjsip_dtls_setup_passive}
profiles_sip_dtlssetup_actpass = {profiles_pjsip_dtls_setup_actpass}
profiles_sip_dtlsverify = {profiles_pjsip_dtls_verify}
profiles_sip_dtlsverify_tooltip = {profiles_pjsip_dtls_verify_tooltip}
profiles_sip_dtlsverify_no = {profiles_pjsip_dtls_verify_no}
profiles_sip_dtlsverify_yes = {profiles_pjsip_dtls_verify_yes}
profiles_sip_dtlsverify_fingerprint = {profiles_pjsip_dtls_verify_fingerprint}
profiles_sip_dtlsverify_certificate = {profiles_pjsip_dtls_verify_certificate}
profiles_sip_dtlsfingerprint = {profiles_pjsip_dtls_fingerprint}
profiles_sip_dtlsfingerprint_tooltip = {profiles_pjsip_dtls_fingerprint_tooltip}
profiles_sip_dtlsfingerprint_sha-256 = {profiles_pjsip_dtls_fingerprint_sha-256}
profiles_sip_dtlsfingerprint_sha-1 = {profiles_pjsip_dtls_fingerprint_sha-1}
profiles_sip_dtlsrekey = {profiles_pjsip_dtls_rekey}
profiles_sip_dtlsrekey_tooltip = {profiles_pjsip_dtls_rekey_tooltip}
profiles_sip_force_avp = Force AVP
profiles_sip_force_avp_tooltip =
	Force 'RTP/AVP', 'RTP/AVPF', 'RTP/SAVP', and 'RTP/SAVPF' to be used for media streams when appropriate, even if a
	DTLS stream is present.
profiles_sip_rtcp_mux = RTCP MUX
profiles_sip_rtcp_mux_tooltip = Enable support for RFC 5761 RTCP multiplexing which is required for WebRTC support
profiles_pjsip_qualify_frequency = Qualify Frequency
profiles_pjsip_qualify_frequency_tooltip = Interval between attempts to qualify the contact for reachability. If 0 never qualify. Time in seconds.
profiles_pjsip_qualify_timeout = Qualify Timeout
profiles_pjsip_qualify_timeout_tooltip = If the contact doesn't respond to the OPTIONS request before the timeout, the contact is marked unavailable. If 0 no timeout.
profiles_pjsip_send_pai = Send P-Asserted-Identity
profiles_pjsip_send_pai_tooltip = Send the P-Asserted-Identity header
profiles_pjsip_send_rpid = Send Remote-Party-ID
profiles_pjsip_send_rpid_tooltip = Send the Remote-Party-ID header
profiles_pjsip_send_diversion = Send Diversion Header
profiles_pjsip_send_diversion_tooltip = Send the Diversion header, conveying the diversion information to the called user agent
profiles_pjsip_webrtc = WebRTC
profiles_pjsip_webrtc_tooltip =
	When set to "yes" this also enables the following values that are needed in order for basic WebRTC support to work:
	rtcp_mux, use_avpf, ice_support, and use_received_transport.
profiles_pjsip_remove_existing = Remove Existing
profiles_pjsip_remove_existing_tooltip =
	Allow a registration to succeed by displacing any existing contacts that now exceed the "{hot_desking.max_contacts}" count.  Any
	removed contacts are the next to expire.  The behaviour is beneficial when "{profiles_pjsip_rewrite_contact}" is enabled and "{hot_desking.max_contacts}"
	is greater than one.  The removed contact is likely the old contact created by "{profiles_pjsip_rewrite_contact}" that the device is
	refreshing.
profiles_pjsip_max_video_streams = Max Video Streams
profiles_pjsip_max_video_streams_tooltip =
	This option enforces a limit on the maximum simultaneous negotiated video streams allowed for the endpoint.
profiles_pjsip_max_audio_streams = Max Audio Streams
profiles_pjsip_max_audio_streams_tooltip =
	This option enforces a limit on the maximum simultaneous negotiated audio streams allowed for the endpoint.
profiles_pjsip_support_path = Support Path
profiles_pjsip_support_path_tooltip =
	When this option is enabled, the Path headers in register requests will be saved and its contents will be used in
	Route headers for outbound out-of-dialog requests and in Path headers for outbound 200 responses. Path support will
	also be indicated in the Supported header.
profiles_pjsip_outbound_proxy = Outbound Proxy
profiles_pjsip_outbound_proxy_tooltip = Full SIP URI of the outbound proxy used to send requests. e.g.: <b>sip:192.168.0.1\;lr</b>
profiles_pjsip_transport_auto = Auto
profiles.general = {vitalpbx.general}
profiles.advanced = {profiles_advanced}
profiles_pjsip_default_expiration = Default Expiration
profiles_pjsip_default_expiration_tooltip = Default expiration time in seconds for contacts that are dynamically bound to an AoR.
profiles_pjsip_maximum_expiration = Maximum Expiration
profiles_pjsip_maximum_expiration_tooltip = Maximum time to keep a peer with explicit expiration. Time in seconds.
profiles_pjsip_minimum_expiration = Minimum Expiration
profiles_pjsip_minimum_expiration_tooltip = Minimum time to keep a peer with an explicit expiration. Time in seconds.
profiles_pjsip_transport_id = {profiles_pjsip_transport}
profiles_pjsip_transport_id_tooltip = {profiles_pjsip_transport_tooltip}
profiles_in_use_by = Cannot delete this profile because is being used by some extensions' devices.
profiles_pjsip_direct_media_glare_mitigation = Direct Media Glare Mitigation
profiles_pjsip_direct_media_glare_mitigation_tooltip =
    Allows for direct media only to be sent on certain call directions in order to prevent glare situations.
profiles_pjsip_direct_media_glare_mitigation_none = {none}
profiles_pjsip_direct_media_glare_mitigation_outgoing = Outgoing
profiles_pjsip_direct_media_glare_mitigation_incoming = Incoming
profiles_pjsip_rtp_keepalive = RTP Keepalive
profiles_pjsip_rtp_keepalive_tooltip =
    At the specified interval(in seconds), Asterisk will send an RTP comfort noise frame. This may be useful for
    situations where Asterisk is behind a NAT or firewall and must keep a hole open in order to allow for media to
    arrive at Asterisk.
profiles_pjsip_rtp_timeout = RTP Timeout
profiles_pjsip_rtp_timeout_tooltip =
    This option configures the number of seconds without RTP (while off hold) before considering a channel as dead.
    When the number of seconds is reached the underlying channel is hung up.
profiles_pjsip_rtp_timeout_hold = RTP Timeout Hold
profiles_pjsip_rtp_timeout_hold_tooltip =
    This option configures the number of seconds without RTP (while on hold) before considering a channel as dead.
    When the number of seconds is reached the underlying channel is hung up.
profiles_pjsip_send_connected_line = Send Connected Line
profiles_pjsip_send_connected_line_tooltip = When set to "Yes," Asterisk will send connected line updates to the endpoints associated with this profile.
